/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.2.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'com.google.inject:guice:4.0'
    implementation 'javax.activation:activation:1.1'
    implementation 'javax.xml.bind:jaxb-api:2.1'

    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.30.1'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.30.1'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.30.1'
    implementation 'org.glassfish.jersey.media:jersey-media-json-binding:2.30.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

distributions {
    
    ec2 {
        contents {
            from "appspec.yml"
            from "codedeploy-app-start.sh"
            with main.contents
        }
    }

    ec2DistTar.enabled = false

    ec2DistZip {
        eachFile { file ->
            String path = file.relativePath
            file.setPath(path.substring(path.indexOf("/")+1,path.length()))
        }
    }
}


application {
    // Define the main class for the application.
    mainClassName = 'com.callableapis.api.App'
}
